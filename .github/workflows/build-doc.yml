name: Build documentation

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  USE_CACHE: "true"

jobs:
  build-doc:
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -el {0}
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          activate-environment: fedoo-doc

      - name: Get Date
        id: get-date
        run: echo "::set-output name=today::$(/bin/date -u '+%Y%m%d')"

      - name: Cache Conda env
        uses: actions/cache@v3
        with:
          path: ${{ env.CONDA }}/envs
          key: conda-${{ runner.os }}--${{ runner.arch }}--${{ steps.get-date.outputs.today }}-${{ hashFiles('environment.yml') }}-${{ env.CACHE_NUMBER }}
        env:
          # Increase this value to reset cache if environment.yml has not changed
          CACHE_NUMBER: 0
        id: cache

      - name: Update environment
        run: |
          conda env update -n fedoo-doc -f environment_doc.yml
          # swap default vtk for vtk-osmesa (avoid PyVista openGL errors)
          # https://github.com/pyvista/pyvista/blob/main/.github/workflows/vtk-pre-test.yml#L53
          # - pip uninstall -y vtk
          conda remove --force vtk
          pip install --extra-index-url https://wheels.vtk.org trame vtk-osmesa
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Conda info
        run: |
          conda info
          conda list

      - name: Cache Sphinx-Gallery Examples
        uses: actions/cache@v4
        if: env.USE_CACHE == 'true'
        with:
          path: /examples/
          key: doc-examples-${{ hashFiles('fedoo/_version.py') }}

      - name: Cache Sphinx build directory
        uses: actions/cache@v4
        if: env.USE_CACHE == 'true'
        with:
          path: docs/_build/
          key: doc-examples-${{ hashFiles('fedoo/_version.py') }}

      - name: Build Documentation
        run: make -C docs html

      - name: Upload HTML documentation
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-build
          path:
            docs/_build/html/
